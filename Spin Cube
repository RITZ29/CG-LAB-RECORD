#include<GL/glut.h>
#include<stdio.h>
#include<stdlib.h>

GLfloat vertices[]={-1.0,-1.0,-1.0,
                    1.0,-1.0,-1.0,
                    1.0,1.0,-1.0,
                    -1.0,1.0,-1.0,
                    -1.0,-1.0,1.0,
                    1.0,-1.0,1.0,
                    1.0,1.0,1.0,
                    -1.0,1.0,1.0};
                    
GLfloat normals[]={-1.0,-1.0,-1.0,
                    1.0,-1.0,-1.0,
                    1.0,1.0,-1.0,
                    -1.0,1.0,-1.0,
                    -1.0,-1.0,1.0,
                    1.0,-1.0,1.0,
                    1.0,1.0,1.0,
                    -1.0,1.0,1.0};
                    
GLfloat colors[]={0.0,0.0,0.0,
                  1.0,0.0,0.0,
                  1.0,1.0,0.0,
                  0.0,1.0,0.0,
                  0.0,0.0,1.0,
                  1.0,0.0,1.0,
                  1.0,1.0,1.0,
                  0.0,1.0,1.0};
                  
Glubyte cubeIndices[]={0,3,2,1,
                       2,3,7,6,
                       0,4,7,3,
                       1,2,6,5,
                       4,5,6,7,
                       0,1,5,4};
                       
static GLfolat theta[]={0.0,0.0,0.0};
static GLint axis=2;

void display(void)
{
   glClear(GL_CLEAR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);
   glLoadIdentity();
   glRotatef(theta[0],1.0,0.0,0.0);
   glRotatef(theta[1],0.0,1.0,0.0);
   glRotatef(theta[2],0.0,0.0,1.0);
   glDrawElements(GL_QUADS,24,GL_UNSIGNED_BYTES,cubeIndices);
   glFlush();
   glutSwapBuffers();
}

void mouse(int btn,int state,int x,int y)
{
   if(btn==GLUT_LEFT_BUTTON && state==GLUT_DOWN)axis=0;
   
   if(btn==GLUT_RIGHT_BUTTON && state==GLUT_DOWN)axis=1;
   
   if(btn==GLUT_MIDDLE_BUTTON && state==GLUT_DOWN)axis=2;
}

void spincube()
{
   theta[axis]+=0.1;
   if(theta[axis]>360.0)  theta[axis]=360.0;
      glutPostRedisplay();
}

void myReshape(int w,int n)
{
   glViewPort(0,0,w,h);
   glMatrixMode(GL_PROJECTION);
   glLoadIdentity();
   if(w<=h)
      gluOrtho(-2.0,2.0,2.0*(GLfloat)h/(GLfloat)w,2.0*(GLfloat)h/(GLfloat)w,10.0,10.0);
      
      gluOrtho(-2.0*(GLfloat)w/(GLfloat)h,2.0*(GLfloat)w/(GLfloat)h,-2.0,2.0,-10.0,10.0);
      glMatrixMode(GL_MODELVIEW);
}

void main(int argc,char** argv)
{
   glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGB);
   glutInitWindowSize(500,500);
   glutCreateWindow("color space");
   glutReshapeFunc(myReshape);
   glutDisplayFunc(display);
   glutMouseFunc(mouse);
   glutIdleFunc(spincube);
   glutEnable(GL_DEPTH_TEST);
   
   glEnableClientState(GL_COLOR_ARRAY);
   
   glEnableClientState(GL_VERTEX_ARRAY);
   
   glEnableClientState(GL_NORMAL_ARRAY);
   
   glVertexPointer(3,GL_FLOAT,0,vertices);
   
   glNormalPointer(3,GL_FLOAT,0,normals);
   glColor3f(1.0,1.0,1.0);
   glutMainLoop();
}
