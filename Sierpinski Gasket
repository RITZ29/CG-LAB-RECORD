#include<GL/glut.h>
#include<stdio.h>

void myinit(void)
{
   glClearClolr(1.0,1.0,1.0,1.0);
   glColor3f(1.0,0.0,0.0);
   glMatrixMode(GL_PROJECTION);
   glLoadIdentity();
   gluOrtho2D(0.0,500.0,0.0,500.0);
}

void DrawGasket(void)
{
   typedef GLfloat point2 [2];
   point2 vertices[3]={{0.0,0.0},{250.0,500.0},{500.0,0.0}};
   int j,k;
   int rand();
   point2p={75.0,50.0};
   for(k=0;k<5000;k++)
   {   
      j=rand()%3;
      p[0]=(p[0]+vertices[j][0])/2.0;
      p[1]=(p[1]+vertices[j][1])/2.0;
      glBegin(GL_POINTS);
      glVertex2fv(p);
      glEnd();
   }
}


void display(void)
{
   glClear(GL_CLEAR_BUFFER_BIT);
   drawGasket();
   glFlush();
}

void main(int argc,char** argv)
{
   glutInit(&argc,argv);
   glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
   glutInitWindowSize(500,500);
   glutInitWindowPosistion(0,0);
   glutCreateWindow("Sierpinski Gasket");
   myinit();
   glutMainLoop();
}
